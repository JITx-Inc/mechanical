#use-added-syntax(jitx)
defpackage mechanical/examples/MountingHoles:
  import core
  import jitx
  import jitx/commands

  import jsl
  import jsl/examples/landpatterns/board

  import mechanical/MountingHoles

val board-shape = RoundedRectangle(50.0, 50.0, 0.25)

public pcb-via th-vip :
  name = "generic via-in-pad via"
  start = LayerIndex(0, Top)
  stop = LayerIndex(0, Bottom)
  diameter = 0.600
  hole-diameter = 0.300
  type = MechanicalDrill
  via-in-pad = true


public pcb-board test-board (outline:Shape) :
  stackup = jlcpcb-jlc2313
  boundary = outline
  signal-boundary = outline
  vias = [th-vip]


pcb-module test-design:
  inst M1 : npth-mounting-hole(
    NonPlatedHole(
      hole = Circle(to-radius(3.4)),
      mask = 0.6,
      silk-outline = One $ CylinderBodyOutline(
        ; ISO-7380 - Button Head Socket Cap Screw
        ;   Metric M3-0.5
        pkg-body = CylinderBody(
          diameter = min-max(5.4, 5.7),
          height = min-max(1.4, 1.65),
        ),
        line-width = 0.15,
        line-clearance = 0.2
      )
    )
  )
  inst M2 : pth-mounting-hole(
    PlatedHole(
      hole = Circle(to-radius(3.4)),
      copper = Circle(to-radius(5.0))
      mask = 0.2,
      silk-outline = One $ CylinderBodyOutline(
        ; ISO-7380 - Button Head Socket Cap Screw
        ;   Metric M3-0.5
        pkg-body = CylinderBody(
          diameter = min-max(5.4, 5.7),
          height = min-max(1.4, 1.65),
        ),
        line-width = 0.15,
        line-clearance = 0.2
      )
    )
  )

  inst M3 : pth-mounting-hole(
    PlatedHole(
      hole = Circle(to-radius(3.4)),
      copper = Circle(to-radius(6.0))
      mask = 0.2,
    ),
    via-cage = PolarViaGroundCage(
      via-def = th-vip,
      count = 6,
      radius = 2.5,
    )
  )

  inst M4 : pth-mounting-hole(
    PlatedHole(
      hole = Circle(to-radius(3.4)),
      copper = RoundedRectangle(6.0, 6.0, 0.2),
      mask = 0.2,
    ),
    via-cage = PolarViaGroundCage(
      via-def = th-vip,
      count = 12,
      radius = 2.5,
      skips = [3, 9]
    )
  )
  inst M5 : npth-mounting-hole(
    NonPlatedHole(
      hole = Circle(to-radius(2.0)),
      mask = 0.2,
      silk-outline = One $ HighVisMarker(
        diam = 6.0,
        internal-diam = 2.5
        line-width = 0.2
      )
    )
  )

  ; place(M1) at loc(0.0,0.0) on Top


; Set the top level module (the module to be compile into a schematic and PCB)
set-current-design("MountingHole-TEST")
set-rules(default-rules)
set-board(test-board(board-shape))

set-main-module(test-design)

; Use any helper function from helpers.stanza here. For example:
; run-check-on-design(my-design)

; View the results
view-board()
view-schematic()
view-design-explorer()

